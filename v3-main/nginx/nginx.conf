# Production NGINX Configuration for Blue1 RAG System
# Optimized for 4-location automotive dealership (400+ concurrent users)

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=query:10m rate=20r/m;

    # Upstream backend servers
    upstream blue1_api {
        least_conn;
        server blue1-api-1:8000 max_fails=3 fail_timeout=30s;
        server blue1-api-2:8000 max_fails=3 fail_timeout=30s;
        server blue1-api-3:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Health check upstream
    upstream blue1_health {
        server blue1-api-1:8000;
        server blue1-api-2:8000;
        server blue1-api-3:8000;
    }

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://blue1_health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            access_log off;
        }

        # Metrics endpoint for Prometheus
        location /metrics {
            proxy_pass http://blue1_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Restrict access to monitoring network
            allow 172.20.0.0/16;
            deny all;
        }

        # RAG query endpoint (stricter rate limiting)
        location /query {
            limit_req zone=query burst=5 nodelay;
            
            proxy_pass http://blue1_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optimized timeouts for RAG queries
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
        }

        # General API endpoints
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://blue1_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Error pages
        error_page 429 /rate_limit.html;
        error_page 502 503 504 /maintenance.html;
        
        location = /rate_limit.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /maintenance.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # HTTPS server (production SSL)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name your-domain.com;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/blue1.crt;
        ssl_certificate_key /etc/ssl/certs/blue1.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # Same location blocks as HTTP server
        include /etc/nginx/conf.d/locations.conf;
    }
}